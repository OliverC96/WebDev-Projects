{"ast":null,"code":"var _jsxFileName = \"/Users/oliverclennan/WebstormProjects/WebDev-Projects/note-keeper/src/components/CreateArea.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// A functional component which encapsulates the form used to create new notes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CreateArea(props) {\n  _s();\n  // Utilizing a useState hook to keep track of the current input in the form\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  // Updates the information associated with the note object\n  function updateNote(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setNote(prevInput => {\n      return {\n        ...prevInput,\n        [name]: value\n      };\n    });\n  }\n\n  // \"Submits\" the new note to the App component (effectively adding it to the collection)\n  function submitNote(event) {\n    props.onAdd(note);\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n    event.preventDefault(); // Preventing the default refresh behaviour upon form submission\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: updateNote,\n        name: \"title\",\n        placeholder: \"Title\",\n        value: note.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: updateNote,\n        name: \"content\",\n        placeholder: \"Take a note...\",\n        rows: \"3\",\n        value: note.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitNote,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateArea, \"MvsK+Z8U+yj5/x50QQZkAci7SSk=\");\n_c = CreateArea;\nvar _c;\n$RefreshReg$(_c, \"CreateArea\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateArea","props","_s","note","setNote","title","content","updateNote","event","name","value","target","prevInput","submitNote","onAdd","preventDefault","children","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","rows","onClick","_c","$RefreshReg$"],"sources":["/Users/oliverclennan/WebstormProjects/WebDev-Projects/note-keeper/src/components/CreateArea.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\n// A functional component which encapsulates the form used to create new notes\nexport function CreateArea(props) {\n\n    // Utilizing a useState hook to keep track of the current input in the form\n    const [note, setNote] = useState({\n        title: \"\",\n        content: \"\"\n    });\n\n    // Updates the information associated with the note object\n    function updateNote(event) {\n        const {name, value} = event.target;\n        setNote((prevInput) => {\n            return {\n                ...prevInput,\n                [name]: value\n            };\n        });\n    }\n\n    // \"Submits\" the new note to the App component (effectively adding it to the collection)\n    function submitNote(event) {\n        props.onAdd(note);\n        setNote({\n            title: \"\",\n            content: \"\"\n        });\n        event.preventDefault(); // Preventing the default refresh behaviour upon form submission\n    }\n\n    return (\n        <div>\n            <form>\n                <input onChange={updateNote} name=\"title\" placeholder=\"Title\" value={note.title} />\n                <textarea onChange={updateNote} name=\"content\" placeholder=\"Take a note...\" rows=\"3\" value={note.content}/>\n                <button onClick={submitNote}>Add</button>\n            </form>\n        </div>\n    );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,SAASC,UAAUA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAE9B;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAC7BQ,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACb,CAAC,CAAC;;EAEF;EACA,SAASC,UAAUA,CAACC,KAAK,EAAE;IACvB,MAAM;MAACC,IAAI;MAAEC;IAAK,CAAC,GAAGF,KAAK,CAACG,MAAM;IAClCP,OAAO,CAAEQ,SAAS,IAAK;MACnB,OAAO;QACH,GAAGA,SAAS;QACZ,CAACH,IAAI,GAAGC;MACZ,CAAC;IACL,CAAC,CAAC;EACN;;EAEA;EACA,SAASG,UAAUA,CAACL,KAAK,EAAE;IACvBP,KAAK,CAACa,KAAK,CAACX,IAAI,CAAC;IACjBC,OAAO,CAAC;MACJC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACb,CAAC,CAAC;IACFE,KAAK,CAACO,cAAc,CAAC,CAAC,CAAC,CAAC;EAC5B;;EAEA,oBACIhB,OAAA;IAAAiB,QAAA,eACIjB,OAAA;MAAAiB,QAAA,gBACIjB,OAAA;QAAOkB,QAAQ,EAAEV,UAAW;QAACE,IAAI,EAAC,OAAO;QAACS,WAAW,EAAC,OAAO;QAACR,KAAK,EAAEP,IAAI,CAACE;MAAM;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnFvB,OAAA;QAAUkB,QAAQ,EAAEV,UAAW;QAACE,IAAI,EAAC,SAAS;QAACS,WAAW,EAAC,gBAAgB;QAACK,IAAI,EAAC,GAAG;QAACb,KAAK,EAAEP,IAAI,CAACG;MAAQ;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3GvB,OAAA;QAAQyB,OAAO,EAAEX,UAAW;QAAAG,QAAA,EAAC;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACpB,EAAA,CAtCeF,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}