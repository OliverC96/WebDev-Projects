// Using the bcrypt node.js module to encrypt and decrypt passwords (via salting and hashing)

// Registering a new user with the system
.post((req, res) => {
    bcrypt.hash(req.body.password, saltRounds, (err, hash) => {
        if (err) console.log(err);
        else {
            const newUser = new User({
                username: req.body.username,
                password: hash
            });
            newUser.save()
                .then(() => {
                    console.log("New user " + req.body.username + " successfully registered!");
                    res.redirect("/secrets");
                })
                .catch((err) => console.log(err));
        }
    });
}

// Logging in an existing user to the system (validating their credentials)
.post((req, res) => {
        User.findOne({username: req.body.username})
            .then((match) => {
                if (match) {
                    bcrypt.compare(req.body.password, match.password, (err, valid) => {
                        if (err) console.log(err);
                        else {
                            if (valid) {
                                console.log("User " + req.body.username + " successfully logged in!");
                                res.render("secrets");
                            }
                            else {
                                console.log("Invalid password - click the link below to reset your password.");
                                res.redirect("/");
                            }
                        }
                    });
                }
                else {
                    console.log("No matching account found - please register a new account to access the system.");
                    res.redirect("/register");
                }
            })
            .catch((err) => console.log(err));
    });